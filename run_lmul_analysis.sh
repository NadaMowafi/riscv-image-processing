#!/bin/bash

# RISC-V Vector LMUL Performance Analysis Runner
# This script runs all LMUL benchmarks and generates comprehensive analysis

set -e  # Exit on error

echo "========================================================"
echo "RISC-V Vector LMUL Performance Analysis"
echo "========================================================"

# Check if we're in the build directory
if [[ ! -f "./LMULBenchmark" ]]; then
    echo "Error: Please run this script from the build directory"
    echo "Expected files: LMULBenchmark, AddBenchmark_LMUL, etc."
    exit 1
fi

# Check if barb.512.pgm exists
if [[ ! -f "./barb.512.pgm" ]]; then
    echo "Error: Test image barb.512.pgm not found in build directory"
    echo "Make sure to run 'make' to copy test files"
    exit 1
fi

echo "Running comprehensive LMUL benchmark suite..."
echo

# 1. Run the main comprehensive benchmark
echo "1. Running comprehensive LMUL benchmark..."
./LMULBenchmark > lmul_comprehensive_results.txt
echo "   ✓ Results saved to lmul_comprehensive_results.txt"
echo

# 2. Run individual operation benchmarks
echo "2. Running individual operation benchmarks..."

echo "   Running Image Addition LMUL analysis..."
./AddBenchmark_LMUL > add_lmul_results.txt
echo "   ✓ Add results saved to add_lmul_results.txt"

echo "   Running Flipping LMUL analysis..."
./FlippingBenchmark_LMUL > flipping_lmul_results.txt
echo "   ✓ Flipping results saved to flipping_lmul_results.txt"

echo "   Running Box Filter LMUL analysis..."
./BoxFilterBenchmark_LMUL > boxfilter_lmul_results.txt
echo "   ✓ Box Filter results saved to boxfilter_lmul_results.txt"

echo

# 3. Generate visualizations
echo "3. Generating performance visualizations..."

# Check if Python is available and has required packages
if ! command -v python3 &> /dev/null; then
    echo "   Warning: python3 not found. Skipping graph generation."
    echo "   To generate graphs manually, run:"
    echo "   python3 ../generate_lmul_graph.py"
else
    # Check if CSV file exists (should be generated by LMULBenchmark)
    if [[ -f "./lmul_benchmark_results.csv" ]]; then
        echo "   Generating comprehensive performance dashboard..."
        python3 ../generate_lmul_graph.py --no-display
        echo "   ✓ Performance dashboard saved as lmul_performance_dashboard.png"
        
        # Run the auto-generated plotting script if it exists
        if [[ -f "./plot_lmul_results.py" ]]; then
            echo "   Running detailed analysis plots..."
            python3 ./plot_lmul_results.py
            echo "   ✓ Detailed analysis plots generated"
        fi
    else
        echo "   Warning: lmul_benchmark_results.csv not found"
        echo "   Comprehensive benchmark may not have completed successfully"
    fi
fi

echo

# 4. Generate summary report
echo "4. Generating summary report..."

cat > lmul_analysis_summary.md << 'EOF'
# RISC-V Vector LMUL Performance Analysis Summary

## Benchmark Run Information
- **Date**: $(date)
- **System**: $(uname -a)
- **Test Image**: barb.512.pgm (512x512 pixels)

## Files Generated
- `lmul_comprehensive_results.txt` - Main benchmark output
- `add_lmul_results.txt` - Image addition analysis
- `flipping_lmul_results.txt` - Flipping operations analysis
- `boxfilter_lmul_results.txt` - Box filter analysis
- `lmul_benchmark_results.csv` - Raw performance data
- `lmul_performance_dashboard.png` - Comprehensive visualization

## Key Results Summary

### Recommended LMUL Values
EOF

# Extract recommendations from the comprehensive results if available
if [[ -f "./lmul_comprehensive_results.txt" ]]; then
    echo "Extracting performance recommendations..."
    grep -A 10 "LMUL RECOMMENDATIONS:" lmul_comprehensive_results.txt >> lmul_analysis_summary.md 2>/dev/null || true
fi

# Add interpretation guide
cat >> lmul_analysis_summary.md << 'EOF'

### Interpretation Guide
- **Efficiency >75%**: Excellent LMUL scaling
- **Efficiency 50-75%**: Good LMUL scaling
- **Efficiency 25-50%**: Limited LMUL benefit
- **Efficiency <25%**: LMUL not recommended

### Analysis Notes
- Higher LMUL values trade register pressure for potential throughput
- Memory-bound operations may not benefit from LMUL >2
- Compute-bound operations typically scale well to m4
- Actual optimal LMUL depends on specific hardware implementation

EOF

echo "   ✓ Summary report saved as lmul_analysis_summary.md"

echo
echo "========================================================"
echo "LMUL Analysis Complete!"
echo "========================================================"
echo
echo "Generated Files:"
echo "📊 lmul_performance_dashboard.png  - Visual performance analysis"
echo "📈 lmul_benchmark_results.csv      - Raw benchmark data"
echo "📝 lmul_analysis_summary.md        - Executive summary"
echo "📋 *_lmul_results.txt             - Detailed operation analyses"
echo
echo "Next Steps:"
echo "1. Review lmul_performance_dashboard.png for visual insights"
echo "2. Check lmul_analysis_summary.md for recommendations"
echo "3. Examine individual operation results for detailed analysis"
echo
echo "For detailed documentation, see: ../LMUL_ANALYSIS_README.md"
echo

# Check if image viewer is available to show the dashboard
if command -v display &> /dev/null && [[ -f "./lmul_performance_dashboard.png" ]]; then
    echo "Opening performance dashboard..."
    display lmul_performance_dashboard.png &
elif command -v eog &> /dev/null && [[ -f "./lmul_performance_dashboard.png" ]]; then
    echo "Opening performance dashboard..."
    eog lmul_performance_dashboard.png &
fi

echo "Analysis complete. Happy optimizing! 🚀" 